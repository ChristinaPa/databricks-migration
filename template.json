{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  "variables": {
    "fileuploadurivariable": "[parameters('fileuploaduri')]",
    "databricksName": "[format('databricks_{0}', variables('randomString'))]",
    "scriptParametersToUploadFile": "[format('-RG_NAME {0} -REGION {1} -WORKSPACE_NAME {2} -LIFETIME_SECONDS {3} -COMMENT {4} -CLUSTER_NAME {5} -SPARK_VERSION {6} -AUTOTERMINATION_MINUTES {7} -NUM_WORKERS {8} -NODE_TYPE_ID {9} -DRIVER_NODE_TYPE_ID {10} -RETRY_LIMIT {11} -RETRY_TIME {12} -CTRL_DEPLOY_CLUSTER {13} -CTRL_DEPLOY_NOTEBOOK {14} -NOTEBOOK_PATH {15}', resourceGroup().name, variables('location'), variables('databricksName'), parameters('lifetimeSeconds'), parameters('comment'), parameters('clusterName'), parameters('sparkVersion'), parameters('autoTerminationMinutes'), parameters('numWorkers'), parameters('nodeTypeId'), parameters('driverNodeTypeId'), parameters('retryLimit'), parameters('retryTime'), if(parameters('ctrlDeployCluster'), '$true', '$false'), if(parameters('ctrlDeployNotebook'), '$true', '$false'), parameters('notebookPath'))]",
    "contributorRoleDefinitionId": "B24988ac-6180-42a0-ab88-20f7382dd24c",
    "bootstrapRoleAssignmentId": "[guid(parameters('firstuniquestring'), parameters('seconduniquestring'))]",
    "randomString": "[substring(guid(resourceGroup().id), 0, 6)]",
    "location": "[resourceGroup().location]",
    "managedResourceGroupName": "[concat('db-rg-', variables('databricksName'))]",
    "managedResourceGroupId": "[concat(subscription().id, '/resourceGroups/', variables('managedResourceGroupName'))]",
    "eventHubNamespaceName": "[format('streamdata-{0}-ns', variables('randomString'))]"
  },

  "parameters": {
    "containerName": {
      "type": "string",
      "defaultValue": "data"
    },
    "eventHubSku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Basic",
        "Standard"
      ]
    },
    "blobAccountName": {
      "type": "string",
      "defaultValue": "[format('adls{0}', uniqueString(resourceGroup().id))]"
    },
    "fileuploaduri": {
      "defaultValue": "https://raw.githubusercontent.com/DatabricksFactory/databricks-migration/main/deployClusterNotebook.ps1",
      "type": "String",
      "metadata": {
        "description": "The URI of script file to upload blob container"
      }
    },
    "identityName": {
      "defaultValue": "PostDeploymentScriptuserAssignedName",
      "type": "String",
      "metadata": {
        "description": "Name of identity"
      }
    },
    "uniqueSuffix": {
      "defaultValue": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
      "type": "String",
      "metadata": {
        "description": "Unique Suffix"
      }
    },
    "firstuniquestring": {
      "defaultValue": "[format('firstunique{0}', parameters('uniqueSuffix'))]",
      "type": "String",
      "metadata": {
        "description": "firstuniquestring"
      }
    },
    "seconduniquestring": {
      "defaultValue": "[format('secondunique{0}', parameters('uniqueSuffix'))]",
      "type": "String",
      "metadata": {
        "description": "seconduniquestring"
      }
    },
    "utcValue": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    },
    "ctrlDeployStorageAccount": {
      "type": "bool",
      "defaultValue": true
    },
    "ctrlDeployKeyVault": {
      "type": "bool",
      "defaultValue": true
    },
    "ctrlDeployEventHub": {
      "type": "bool",
      "defaultValue": true
    },
    "ctrlDeployCluster": {
      "type": "bool",
      "metadata": {
        "description": "Controls the execution of cluster deployment script"
      }
    },
    "ctrlDeployNotebook": {
      "type": "bool",
      "metadata": {
        "description": "Controls the execution of notebook deployment script"
      }
    },
    "lifetimeSeconds": {
      "type": "int",
      "defaultValue": 1200,
      "metadata": {
        "description": "Time to live of the Databricks token in seconds"
      }
    },
    "comment": {
      "type": "string",
      "defaultValue": "ARM deployment",
      "metadata": {
        "description": "Side note on the token generation"
      }
    },
    "clusterName": {
      "type": "string",
      "defaultValue": "dbcluster",
      "metadata": {
        "description": "Name of the Databricks cluster"
      }
    },
    "sparkVersion": {
      "type": "string",
      "defaultValue": "11.3.x-scala2.12",
      "metadata": {
        "description": "Version of Spark in the cluster"
      }
    },
    "autoTerminationMinutes": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "Cluster terminates after specified minutes of inactivity"
      }
    },
    "numWorkers": {
      "type": "string",
      "defaultValue": "2",
      "metadata": {
        "description": "Number of worker nodes"
      }
    },
    "nodeTypeId": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "metadata": {
        "description": "Type of worker node"
      }
    },
    "driverNodeTypeId": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "metadata": {
        "description": "Type of driver node"
      }
    },
    "retryLimit": {
      "type": "int",
      "defaultValue": 15,
      "metadata": {
        "description": "Max number of retries"
      }
    },
    "retryTime": {
      "type": "int",
      "defaultValue": 60,
      "metadata": {
        "description": "Interval between each retries in seconds"
      }
    },
    "notebookPath": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/DatabricksFactory/databricks-migration/main/Artifacts",
      "metadata": {
        "description": "Path of the notebook to be uploaded"
      }
    }
  },

  "resources": [

    {
      "type": "Microsoft.Databricks/workspaces",
      "apiVersion": "2018-04-01",
      "location": "[variables('location')]",
      "name": "[variables('databricksName')]",
      "sku": {
        "name": "premium"
      },
      "properties": {
        "ManagedResourceGroupId": "[variables('managedResourceGroupId')]"
      }
    },

    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "PostDeploymentScriptForFileUpload",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]",
        "[resourceId('Microsoft.Databricks/workspaces', variables('databricksName'))]"
      ],
      "kind": "AzurePowerShell",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]": {}
        }
      },
      "properties": {
        "azPowerShellVersion": "7.2.4",
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "P1D",
        "timeout": "PT30M",
        "arguments": "[variables('scriptParametersToUploadFile')]",
        "primaryScriptUri": "[variables('fileuploadurivariable')]"
      }
    },

    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[parameters('identityName')]",
      "location": "[resourceGroup().location]"
    },

    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[variables('bootstrapRoleAssignmentId')]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('contributorRoleDefinitionId'))]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2018-11-30').principalId]",
        "scope": "[resourceGroup().id]",
        "principalType": "ServicePrincipal"
      }
    },

    {
      "type": "Microsoft.Storage/storageAccounts",
      "condition": "[parameters('ctrlDeployStorageAccount')]",
      "apiVersion": "2021-04-01",
      "name": "[parameters('blobAccountName')]",
      "location": "[variables('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "isHnsEnabled": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "supportsHttpsTrafficOnly": true,
        "accessTier": "Hot"
      }
    },

    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "condition": "[parameters('ctrlDeployStorageAccount')]",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/default/{1}',parameters('blobAccountName'), parameters('containerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('blobAccountName'))]"
      ]
    },

    {
      "type": "Microsoft.EventHub/namespaces",
      "condition": "[parameters('ctrlDeployEventHub')]",
      "apiVersion": "2021-11-01",
      "name": "[variables('eventHubNamespaceName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "[parameters('eventHubSku')]",
        "tier": "[parameters('eventHubSku')]",
        "capacity": 1
      },
      "properties": {
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0
      }
    },

    {
      "type": "Microsoft.KeyVault/vaults",
      "condition": "[parameters('ctrlDeployKeyVault')]",
      "apiVersion": "2021-04-01-preview",
      "name": "[format('vault{0}', parameters('utcValue'))]",
      "location": "[variables('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": []
      }
    }
  ],

  "outputs": {

  }
}
